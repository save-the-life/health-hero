{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 58, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/dhwan/Desktop/work/health-hero/src/lib/supabase.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js'\r\n\r\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!\r\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\r\n\r\nif (!supabaseUrl || !supabaseAnonKey) {\r\n  throw new Error('Missing Supabase environment variables. Please check your .env.local file.')\r\n}\r\n\r\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey, {\r\n  auth: {\r\n    autoRefreshToken: true,\r\n    persistSession: true,\r\n    detectSessionInUrl: false\r\n  }\r\n})\r\n\r\n"],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM;AACN,MAAM;AAEN;;AAIO,MAAM,WAAW,IAAA,4OAAY,EAAC,aAAa,iBAAiB;IACjE,MAAM;QACJ,kBAAkB;QAClB,gBAAgB;QAChB,oBAAoB;IACtB;AACF","debugId":null}},
    {"offset": {"line": 79, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/dhwan/Desktop/work/health-hero/src/store/authStore.ts"],"sourcesContent":["import { create } from 'zustand'\r\nimport { persist } from 'zustand/middleware'\r\nimport { UserProfile } from '@/types/database'\r\nimport { supabase } from '@/lib/supabase'\r\n\r\ninterface AuthState {\r\n  user: UserProfile | null\r\n  isAuthenticated: boolean\r\n  isLoading: boolean\r\n  error: string | null\r\n  \r\n  // Actions\r\n  setUser: (user: UserProfile | null) => void\r\n  setLoading: (isLoading: boolean) => void\r\n  setError: (error: string | null) => void\r\n  logout: () => Promise<void>\r\n  initialize: () => Promise<void>\r\n  updateProfile: (updates: Partial<UserProfile>) => void\r\n}\r\n\r\nexport const useAuthStore = create<AuthState>()(\r\n  persist(\r\n    (set, get) => ({\r\n      user: null,\r\n      isAuthenticated: false,\r\n      isLoading: false,\r\n      error: null,\r\n\r\n      setUser: (user) => set({ \r\n        user, \r\n        isAuthenticated: !!user,\r\n        error: null \r\n      }),\r\n\r\n      setLoading: (isLoading) => set({ isLoading }),\r\n\r\n      setError: (error) => set({ error }),\r\n\r\n      logout: async () => {\r\n        try {\r\n          // Supabase 로그아웃\r\n          await supabase.auth.signOut()\r\n          \r\n          // 상태 초기화\r\n          set({\r\n            user: null,\r\n            isAuthenticated: false,\r\n            error: null\r\n          })\r\n        } catch (error) {\r\n          console.error('로그아웃 실패:', error)\r\n          set({ error: '로그아웃에 실패했습니다.' })\r\n        }\r\n      },\r\n\r\n      initialize: async () => {\r\n        set({ isLoading: true })\r\n        \r\n        try {\r\n          // Supabase 세션 확인\r\n          const { data: { session } } = await supabase.auth.getSession()\r\n          \r\n          if (session?.user) {\r\n            // 사용자 프로필 가져오기\r\n            const { data: profile, error } = await supabase\r\n              .from('user_profiles')\r\n              .select('*')\r\n              .eq('id', session.user.id)\r\n              .single()\r\n\r\n            if (error) {\r\n              console.error('프로필 로드 실패:', error)\r\n              set({ isAuthenticated: false, user: null })\r\n            } else {\r\n              set({ user: profile, isAuthenticated: true })\r\n            }\r\n          } else {\r\n            set({ isAuthenticated: false, user: null })\r\n          }\r\n        } catch (error) {\r\n          console.error('인증 상태 초기화 실패:', error)\r\n          set({ isAuthenticated: false, user: null })\r\n        } finally {\r\n          set({ isLoading: false })\r\n        }\r\n      },\r\n\r\n      updateProfile: (updates) => {\r\n        const currentUser = get().user\r\n        if (currentUser) {\r\n          set({\r\n            user: {\r\n              ...currentUser,\r\n              ...updates\r\n            }\r\n          })\r\n        }\r\n      }\r\n    }),\r\n    {\r\n      name: 'auth-storage',\r\n      partialize: (state) => ({\r\n        user: state.user,\r\n        isAuthenticated: state.isAuthenticated\r\n      })\r\n    }\r\n  )\r\n)\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AAEA;;;;AAiBO,MAAM,eAAe,IAAA,uLAAM,IAChC,IAAA,6LAAO,EACL,CAAC,KAAK,MAAQ,CAAC;QACb,MAAM;QACN,iBAAiB;QACjB,WAAW;QACX,OAAO;QAEP,SAAS,CAAC,OAAS,IAAI;gBACrB;gBACA,iBAAiB,CAAC,CAAC;gBACnB,OAAO;YACT;QAEA,YAAY,CAAC,YAAc,IAAI;gBAAE;YAAU;QAE3C,UAAU,CAAC,QAAU,IAAI;gBAAE;YAAM;QAEjC,QAAQ;YACN,IAAI;gBACF,gBAAgB;gBAChB,MAAM,uKAAQ,CAAC,IAAI,CAAC,OAAO;gBAE3B,SAAS;gBACT,IAAI;oBACF,MAAM;oBACN,iBAAiB;oBACjB,OAAO;gBACT;YACF,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,YAAY;gBAC1B,IAAI;oBAAE,OAAO;gBAAgB;YAC/B;QACF;QAEA,YAAY;YACV,IAAI;gBAAE,WAAW;YAAK;YAEtB,IAAI;gBACF,iBAAiB;gBACjB,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,EAAE,GAAG,MAAM,uKAAQ,CAAC,IAAI,CAAC,UAAU;gBAE5D,IAAI,SAAS,MAAM;oBACjB,eAAe;oBACf,MAAM,EAAE,MAAM,OAAO,EAAE,KAAK,EAAE,GAAG,MAAM,uKAAQ,CAC5C,IAAI,CAAC,iBACL,MAAM,CAAC,KACP,EAAE,CAAC,MAAM,QAAQ,IAAI,CAAC,EAAE,EACxB,MAAM;oBAET,IAAI,OAAO;wBACT,QAAQ,KAAK,CAAC,cAAc;wBAC5B,IAAI;4BAAE,iBAAiB;4BAAO,MAAM;wBAAK;oBAC3C,OAAO;wBACL,IAAI;4BAAE,MAAM;4BAAS,iBAAiB;wBAAK;oBAC7C;gBACF,OAAO;oBACL,IAAI;wBAAE,iBAAiB;wBAAO,MAAM;oBAAK;gBAC3C;YACF,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,iBAAiB;gBAC/B,IAAI;oBAAE,iBAAiB;oBAAO,MAAM;gBAAK;YAC3C,SAAU;gBACR,IAAI;oBAAE,WAAW;gBAAM;YACzB;QACF;QAEA,eAAe,CAAC;YACd,MAAM,cAAc,MAAM,IAAI;YAC9B,IAAI,aAAa;gBACf,IAAI;oBACF,MAAM;wBACJ,GAAG,WAAW;wBACd,GAAG,OAAO;oBACZ;gBACF;YACF;QACF;IACF,CAAC,GACD;IACE,MAAM;IACN,YAAY,CAAC,QAAU,CAAC;YACtB,MAAM,MAAM,IAAI;YAChB,iBAAiB,MAAM,eAAe;QACxC,CAAC;AACH","debugId":null}},
    {"offset": {"line": 184, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/dhwan/Desktop/work/health-hero/src/store/gameStore.ts"],"sourcesContent":["import { create } from 'zustand'\r\nimport { persist } from 'zustand/middleware'\r\nimport { supabase } from '@/lib/supabase'\r\n\r\ninterface UserHearts {\r\n  current_hearts: number\r\n  last_refill_at: string\r\n  ad_views_today: number\r\n  ad_reset_at: string\r\n}\r\n\r\ninterface GameState {\r\n  // 사용자 데이터\r\n  level: number\r\n  totalScore: number\r\n  currentExp: number\r\n  currentPhase: number\r\n  currentStage: number\r\n  hearts: UserHearts | null\r\n  \r\n  // 하트 타이머\r\n  heartTimer: string\r\n  \r\n  // 로딩 상태\r\n  isLoading: boolean\r\n  error: string | null\r\n  \r\n  // Actions\r\n  loadUserData: (userId: string) => Promise<void>\r\n  updateHearts: () => Promise<void>\r\n  consumeHeart: (amount?: number) => Promise<boolean>\r\n  addHeartByAd: () => Promise<boolean>\r\n  buyHeartWithPoints: () => Promise<boolean>\r\n  updateScore: (score: number) => void\r\n  updateExp: (exp: number) => void\r\n  updateLevel: (level: number) => void\r\n  setError: (error: string | null) => void\r\n}\r\n\r\nexport const useGameStore = create<GameState>()(\r\n  persist(\r\n    (set, get) => ({\r\n      // 초기 상태\r\n      level: 1,\r\n      totalScore: 0,\r\n      currentExp: 0,\r\n      currentPhase: 1,\r\n      currentStage: 1,\r\n      hearts: null,\r\n      heartTimer: '5분00초',\r\n      isLoading: false,\r\n      error: null,\r\n\r\n      // 사용자 데이터 로드\r\n      loadUserData: async (userId: string) => {\r\n        set({ isLoading: true, error: null })\r\n        \r\n        try {\r\n          // 사용자 프로필과 하트 데이터를 함께 조회\r\n          const [profileResult, heartsResult] = await Promise.all([\r\n            supabase\r\n              .from('user_profiles')\r\n              .select('level, total_score, current_exp, current_phase, current_stage')\r\n              .eq('id', userId)\r\n              .single(),\r\n            \r\n            supabase\r\n              .from('user_hearts')\r\n              .select('*')\r\n              .eq('user_id', userId)\r\n              .single()\r\n          ])\r\n\r\n          if (profileResult.error) {\r\n            console.warn('프로필 로드 실패, 기본값 사용:', profileResult.error.message)\r\n            // 프로필이 없으면 기본값 사용 (최초 회원가입 시 500포인트 지급)\r\n            const defaultProfile = {\r\n              level: 1,\r\n              total_score: 500,\r\n              current_exp: 0,\r\n              current_phase: 1,\r\n              current_stage: 1\r\n            }\r\n            \r\n            set({\r\n              level: defaultProfile.level,\r\n              totalScore: defaultProfile.total_score,\r\n              currentExp: defaultProfile.current_exp,\r\n              currentPhase: defaultProfile.current_phase,\r\n              currentStage: defaultProfile.current_stage,\r\n              isLoading: false\r\n            })\r\n            return\r\n          }\r\n\r\n          if (heartsResult.error) {\r\n            console.warn('하트 데이터 로드 실패, 기본값 사용:', heartsResult.error.message)\r\n            // 하트 데이터가 없으면 기본값 사용\r\n            const defaultHearts = {\r\n              current_hearts: 5,\r\n              last_refill_at: new Date().toISOString(),\r\n              ad_views_today: 0,\r\n              ad_reset_at: new Date().toISOString()\r\n            }\r\n            \r\n            const heartTimer = get().calculateHeartTimer(defaultHearts.last_refill_at, defaultHearts.current_hearts)\r\n            \r\n            set({\r\n              hearts: defaultHearts,\r\n              heartTimer,\r\n              isLoading: false\r\n            })\r\n            return\r\n          }\r\n\r\n          const profile = profileResult.data\r\n          const hearts = heartsResult.data\r\n\r\n          // 하트 타이머 계산\r\n          const heartTimer = get().calculateHeartTimer(hearts.last_refill_at, hearts.current_hearts)\r\n\r\n          set({\r\n            level: profile.level || 1,\r\n            totalScore: profile.total_score || 0,\r\n            currentExp: profile.current_exp || 0,\r\n            currentPhase: profile.current_phase || 1,\r\n            currentStage: profile.current_stage || 1,\r\n            hearts: hearts,\r\n            heartTimer,\r\n            isLoading: false\r\n          })\r\n\r\n        } catch (error) {\r\n          console.error('사용자 데이터 로드 실패:', error)\r\n          set({ \r\n            error: error instanceof Error ? error.message : '데이터 로드 실패',\r\n            isLoading: false \r\n          })\r\n        }\r\n      },\r\n\r\n      // 하트 업데이트\r\n      updateHearts: async () => {\r\n        const hearts = get().hearts\r\n        if (!hearts) return\r\n\r\n        // 하트가 이미 5개면 충전할 필요 없음\r\n        if (hearts.current_hearts >= 5) {\r\n          const heartTimer = get().calculateHeartTimer(hearts.last_refill_at, hearts.current_hearts)\r\n          set({ heartTimer })\r\n          return\r\n        }\r\n\r\n        try {\r\n          const { data, error } = await supabase\r\n            .rpc('refill_heart', { p_user_id: hearts.user_id })\r\n\r\n          if (error) {\r\n            console.error('하트 업데이트 실패:', error)\r\n            return\r\n          }\r\n\r\n          if (data && data.length > 0) {\r\n            const result = data[0]\r\n            const heartTimer = get().calculateHeartTimer(result.last_refill_at, result.current_hearts)\r\n            \r\n            set({\r\n              hearts: {\r\n                ...hearts,\r\n                current_hearts: result.current_hearts,\r\n                last_refill_at: result.last_refill_at\r\n              },\r\n              heartTimer\r\n            })\r\n          }\r\n        } catch (error) {\r\n          console.error('하트 업데이트 실패:', error)\r\n        }\r\n      },\r\n\r\n      // 하트 소모\r\n      consumeHeart: async (amount = 1) => {\r\n        const hearts = get().hearts\r\n        if (!hearts) return false\r\n\r\n        try {\r\n          const { data, error } = await supabase\r\n            .rpc('consume_heart', { \r\n              p_user_id: hearts.user_id, \r\n              p_amount: amount \r\n            })\r\n\r\n          if (error) {\r\n            console.error('하트 소모 실패:', error)\r\n            return false\r\n          }\r\n\r\n          if (data && data.length > 0) {\r\n            const result = data[0]\r\n            \r\n            if (result.success) {\r\n              set({\r\n                hearts: {\r\n                  ...hearts,\r\n                  current_hearts: result.current_hearts\r\n                }\r\n              })\r\n              return true\r\n            }\r\n          }\r\n          \r\n          return false\r\n        } catch (error) {\r\n          console.error('하트 소모 실패:', error)\r\n          return false\r\n        }\r\n      },\r\n\r\n      // 광고로 하트 획득\r\n      addHeartByAd: async () => {\r\n        const hearts = get().hearts\r\n        if (!hearts) return false\r\n\r\n        try {\r\n          const { data, error } = await supabase\r\n            .rpc('add_heart_by_ad', { p_user_id: hearts.user_id })\r\n\r\n          if (error) {\r\n            console.error('광고 하트 획득 실패:', error)\r\n            return false\r\n          }\r\n\r\n          if (data && data.length > 0) {\r\n            const result = data[0]\r\n            \r\n            if (result.success) {\r\n              set({\r\n                hearts: {\r\n                  ...hearts,\r\n                  current_hearts: result.current_hearts,\r\n                  ad_views_today: result.ad_views_today\r\n                }\r\n              })\r\n              return true\r\n            }\r\n          }\r\n          \r\n          return false\r\n        } catch (error) {\r\n          console.error('광고 하트 획득 실패:', error)\r\n          return false\r\n        }\r\n      },\r\n\r\n      // 포인트로 하트 구매\r\n      buyHeartWithPoints: async () => {\r\n        const hearts = get().hearts\r\n        if (!hearts) return false\r\n\r\n        try {\r\n          const { data, error } = await supabase\r\n            .rpc('buy_heart_with_points', { \r\n              p_user_id: hearts.user_id, \r\n              p_cost: 500 \r\n            })\r\n\r\n          if (error) {\r\n            console.error('포인트 하트 구매 실패:', error)\r\n            return false\r\n          }\r\n\r\n          if (data && data.length > 0) {\r\n            const result = data[0]\r\n            \r\n            if (result.success) {\r\n              set({\r\n                hearts: {\r\n                  ...hearts,\r\n                  current_hearts: result.current_hearts\r\n                },\r\n                totalScore: result.current_points\r\n              })\r\n              return true\r\n            }\r\n          }\r\n          \r\n          return false\r\n        } catch (error) {\r\n          console.error('포인트 하트 구매 실패:', error)\r\n          return false\r\n        }\r\n      },\r\n\r\n      // 점수 업데이트\r\n      updateScore: (score: number) => {\r\n        set({ totalScore: score })\r\n      },\r\n\r\n      // 경험치 업데이트\r\n      updateExp: (exp: number) => {\r\n        set({ currentExp: exp })\r\n      },\r\n\r\n      // 레벨 업데이트\r\n      updateLevel: (level: number) => {\r\n        set({ level })\r\n      },\r\n\r\n      // 에러 설정\r\n      setError: (error: string | null) => {\r\n        set({ error })\r\n      },\r\n\r\n      // 하트 타이머 계산 헬퍼 함수\r\n      calculateHeartTimer: (lastRefillAt: string, currentHearts: number) => {\r\n        // 하트가 5개면 충전 완료\r\n        if (currentHearts >= 5) {\r\n          return '충전 완료'\r\n        }\r\n        \r\n        const now = new Date()\r\n        const lastRefill = new Date(lastRefillAt)\r\n        const diffMs = now.getTime() - lastRefill.getTime()\r\n        const diffMinutes = Math.floor(diffMs / (1000 * 60))\r\n        \r\n        // 5분마다 하트 충전\r\n        const nextRefillInMinutes = 5 - (diffMinutes % 5)\r\n        \r\n        // 다음 충전까지 남은 시간을 분:초 형식으로 표시\r\n        const minutes = Math.floor(nextRefillInMinutes)\r\n        const seconds = 60 - (Math.floor(diffMs / 1000) % 60)\r\n        \r\n        return `${minutes}분${seconds.toString().padStart(2, '0')}초`\r\n      }\r\n    }),\r\n    {\r\n      name: 'game-storage',\r\n      partialize: (state) => ({\r\n        level: state.level,\r\n        totalScore: state.totalScore,\r\n        currentExp: state.currentExp,\r\n        currentPhase: state.currentPhase,\r\n        currentStage: state.currentStage,\r\n        hearts: state.hearts\r\n      })\r\n    }\r\n  )\r\n)"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 462, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/dhwan/Desktop/work/health-hero/src/components/GameHeader.tsx"],"sourcesContent":["'use client'\r\n\r\nimport Image from \"next/image\";\r\nimport { useGameStore } from \"@/store/gameStore\";\r\n\r\nexport default function GameHeader() {\r\n  const { \r\n    level, \r\n    totalScore, \r\n    hearts, \r\n    heartTimer \r\n  } = useGameStore();\r\n\r\n  // 레벨에 따른 캐릭터 이미지 경로 반환\r\n  const getCharacterImage = (level: number): string => {\r\n    if (level >= 20) return '/images/characters/level-20.png';\r\n    if (level >= 15) return '/images/characters/level-15.png';\r\n    if (level >= 10) return '/images/characters/level-10.png';\r\n    if (level >= 5) return '/images/characters/level-5.png';\r\n    return '/images/characters/level-1.png';\r\n  };\r\n\r\n  // 하트 타이머 텍스트 반환\r\n  const getHeartTimerText = (): string => {\r\n    if (!hearts) return \"로딩 중...\";\r\n    if (hearts.current_hearts >= 5) return \"충전 완료\";\r\n    \r\n    if (heartTimer) {\r\n      const minutes = Math.floor(heartTimer / 60);\r\n      const seconds = heartTimer % 60;\r\n      return `${minutes}분${seconds}초`;\r\n    }\r\n    \r\n    return \"충전 중...\";\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed top-6 left-0 right-0 z-30 bg-transparent\">\r\n      <div className=\"flex items-center justify-between px-6 py-3 h-[60px]\">\r\n        \r\n        {/* 캐릭터 & 레벨 */}\r\n        <div className=\"flex items-center gap-5\">\r\n          <div className=\"relative\">\r\n            {/* 캐릭터 원형 배경 */}\r\n            <Image\r\n              src=\"/images/ui/block02.png\"\r\n              alt=\"캐릭터 배경\"\r\n              width={40}\r\n              height={40}\r\n              className=\"relative z-10\"\r\n            />\r\n            {/* 캐릭터 이미지 */}\r\n            <Image\r\n              src={getCharacterImage(level)}\r\n              alt=\"캐릭터\"\r\n              width={30}\r\n              height={30}\r\n              className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 z-20\"\r\n            />\r\n            {/* 레벨 블록 */}\r\n            <Image\r\n              src=\"/images/ui/block01.png\"\r\n              alt=\"레벨 배경\"\r\n              width={70}\r\n              height={24}\r\n              className=\"absolute top-1/2 left-6 transform -translate-y-1/2 z-0\"\r\n              style={{ width: '70px', height: '24px', minWidth: '70px', minHeight: '24px' }}\r\n            />\r\n            {/* 레벨 텍스트 */}\r\n            <span className=\"absolute top-1/2 left-6 transform -translate-y-1/2 z-10 text-[10px] font-bold text-[#8B4513] whitespace-nowrap flex items-center justify-center w-[70px] ml-1\">\r\n              Lv.{level}\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        {/* 하트 */}\r\n        <div className=\"flex items-center gap-5\">\r\n          <div className=\"relative\">\r\n            {/* 하트 아이콘 */}\r\n            <Image\r\n              src=\"/images/items/icon-heart.png\"\r\n              alt=\"하트\"\r\n              width={44}\r\n              height={44}\r\n              className=\"relative z-10\"\r\n            />\r\n            {/* 하트 내부 숫자 */}\r\n            <span className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 z-20 text-white text-base font-normal\">\r\n              {hearts?.current_hearts || 5}\r\n            </span>\r\n            {/* 광고 버튼 */}\r\n            <Image\r\n              src=\"/images/items/button-ad.png\"\r\n              alt=\"광고 버튼\"\r\n              width={16}\r\n              height={16}\r\n              className=\"absolute bottom-1 right-1 z-20\"\r\n            />\r\n            {/* 타이머 블록 */}\r\n            <Image\r\n              src=\"/images/ui/block01.png\"\r\n              alt=\"타이머 배경\"\r\n              width={70}\r\n              height={24}\r\n              className=\"absolute top-1/2 left-6 transform -translate-y-1/2 z-0\"\r\n              style={{ width: '70px', height: '24px', minWidth: '70px', minHeight: '24px' }}\r\n            />\r\n            {/* 타이머 텍스트 */}\r\n            <span className=\"absolute top-1/2 left-6 transform -translate-y-1/2 z-10 text-[10px] font-bold text-[#8B4513] whitespace-nowrap flex items-center justify-center w-[70px] ml-1\">\r\n              {getHeartTimerText()}\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        {/* 점수 */}\r\n        <div className=\"flex items-center gap-5\">\r\n          <div className=\"relative\">\r\n            {/* 별 아이콘 */}\r\n            <Image\r\n              src=\"/images/items/Icon-star.png\"\r\n              alt=\"별\"\r\n              width={40}\r\n              height={40}\r\n              className=\"relative z-10\"\r\n            />\r\n            {/* 점수 블록 */}\r\n            <Image\r\n              src=\"/images/ui/block01.png\"\r\n              alt=\"점수 배경\"\r\n              width={70}\r\n              height={24}\r\n              className=\"absolute top-1/2 left-6 transform -translate-y-1/2 z-0\"\r\n              style={{ width: '70px', height: '24px', minWidth: '70px', minHeight: '24px' }}\r\n            />\r\n            {/* 점수 텍스트 */}\r\n            <span className=\"absolute top-1/2 left-6 transform -translate-y-1/2 z-10 text-[10px] font-bold text-[#8B4513] whitespace-nowrap flex items-center justify-center w-[70px] ml-1\">\r\n              {totalScore.toLocaleString()}\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        {/* 설정 버튼 */}\r\n        <div className=\"flex items-center\">\r\n          <Image\r\n            src=\"/images/items/button-setting.png\"\r\n            alt=\"설정\"\r\n            width={24}\r\n            height={24}\r\n            className=\"cursor-pointer hover:opacity-80 transition-opacity\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAHA;;;;AAKe,SAAS;IACtB,MAAM,EACJ,KAAK,EACL,UAAU,EACV,MAAM,EACN,UAAU,EACX,GAAG,IAAA,8KAAY;IAEhB,uBAAuB;IACvB,MAAM,oBAAoB,CAAC;QACzB,IAAI,SAAS,IAAI,OAAO;QACxB,IAAI,SAAS,IAAI,OAAO;QACxB,IAAI,SAAS,IAAI,OAAO;QACxB,IAAI,SAAS,GAAG,OAAO;QACvB,OAAO;IACT;IAEA,gBAAgB;IAChB,MAAM,oBAAoB;QACxB,IAAI,CAAC,QAAQ,OAAO;QACpB,IAAI,OAAO,cAAc,IAAI,GAAG,OAAO;QAEvC,IAAI,YAAY;YACd,MAAM,UAAU,KAAK,KAAK,CAAC,aAAa;YACxC,MAAM,UAAU,aAAa;YAC7B,OAAO,GAAG,QAAQ,CAAC,EAAE,QAAQ,CAAC,CAAC;QACjC;QAEA,OAAO;IACT;IAEA,qBACE,mRAAC;QAAI,WAAU;kBACb,cAAA,mRAAC;YAAI,WAAU;;8BAGb,mRAAC;oBAAI,WAAU;8BACb,cAAA,mRAAC;wBAAI,WAAU;;0CAEb,mRAAC,6KAAK;gCACJ,KAAI;gCACJ,KAAI;gCACJ,OAAO;gCACP,QAAQ;gCACR,WAAU;;;;;;0CAGZ,mRAAC,6KAAK;gCACJ,KAAK,kBAAkB;gCACvB,KAAI;gCACJ,OAAO;gCACP,QAAQ;gCACR,WAAU;;;;;;0CAGZ,mRAAC,6KAAK;gCACJ,KAAI;gCACJ,KAAI;gCACJ,OAAO;gCACP,QAAQ;gCACR,WAAU;gCACV,OAAO;oCAAE,OAAO;oCAAQ,QAAQ;oCAAQ,UAAU;oCAAQ,WAAW;gCAAO;;;;;;0CAG9E,mRAAC;gCAAK,WAAU;;oCAAgK;oCAC1K;;;;;;;;;;;;;;;;;;8BAMV,mRAAC;oBAAI,WAAU;8BACb,cAAA,mRAAC;wBAAI,WAAU;;0CAEb,mRAAC,6KAAK;gCACJ,KAAI;gCACJ,KAAI;gCACJ,OAAO;gCACP,QAAQ;gCACR,WAAU;;;;;;0CAGZ,mRAAC;gCAAK,WAAU;0CACb,QAAQ,kBAAkB;;;;;;0CAG7B,mRAAC,6KAAK;gCACJ,KAAI;gCACJ,KAAI;gCACJ,OAAO;gCACP,QAAQ;gCACR,WAAU;;;;;;0CAGZ,mRAAC,6KAAK;gCACJ,KAAI;gCACJ,KAAI;gCACJ,OAAO;gCACP,QAAQ;gCACR,WAAU;gCACV,OAAO;oCAAE,OAAO;oCAAQ,QAAQ;oCAAQ,UAAU;oCAAQ,WAAW;gCAAO;;;;;;0CAG9E,mRAAC;gCAAK,WAAU;0CACb;;;;;;;;;;;;;;;;;8BAMP,mRAAC;oBAAI,WAAU;8BACb,cAAA,mRAAC;wBAAI,WAAU;;0CAEb,mRAAC,6KAAK;gCACJ,KAAI;gCACJ,KAAI;gCACJ,OAAO;gCACP,QAAQ;gCACR,WAAU;;;;;;0CAGZ,mRAAC,6KAAK;gCACJ,KAAI;gCACJ,KAAI;gCACJ,OAAO;gCACP,QAAQ;gCACR,WAAU;gCACV,OAAO;oCAAE,OAAO;oCAAQ,QAAQ;oCAAQ,UAAU;oCAAQ,WAAW;gCAAO;;;;;;0CAG9E,mRAAC;gCAAK,WAAU;0CACb,WAAW,cAAc;;;;;;;;;;;;;;;;;8BAMhC,mRAAC;oBAAI,WAAU;8BACb,cAAA,mRAAC,6KAAK;wBACJ,KAAI;wBACJ,KAAI;wBACJ,OAAO;wBACP,QAAQ;wBACR,WAAU;;;;;;;;;;;;;;;;;;;;;;AAMtB","debugId":null}},
    {"offset": {"line": 722, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/dhwan/Desktop/work/health-hero/src/services/quizService.ts"],"sourcesContent":["import { supabase } from '@/lib/supabase';\r\n\r\nexport interface QuizQuestion {\r\n  id: string;\r\n  qnum: number;\r\n  topic: string;\r\n  prompt: string;\r\n  choices: string[];\r\n  answer_index: number;\r\n  hint: string;\r\n  explanation: string;\r\n  difficulty_label: string;\r\n  difficulty_level: number;\r\n}\r\n\r\nexport class QuizService {\r\n  // 특정 페이즈와 스테이지의 퀴즈 문제 가져오기\r\n  static async getQuizQuestion(phase: number, stage: number): Promise<QuizQuestion | null> {\r\n    try {\r\n      // qnum을 phase와 stage로 계산 (예: phase 1, stage 1 = qnum 1)\r\n      const qnum = (phase - 1) * 5 + stage;\r\n      \r\n      const { data, error } = await supabase\r\n        .from('quizzes')\r\n        .select('*')\r\n        .eq('qnum', qnum)\r\n        .single();\r\n\r\n      if (error) {\r\n        console.error('퀴즈 문제 가져오기 실패:', error);\r\n        return null;\r\n      }\r\n\r\n      return data;\r\n    } catch (error) {\r\n      console.error('퀴즈 문제 가져오기 중 오류:', error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  // 특정 페이즈의 모든 스테이지 문제 가져오기\r\n  static async getPhaseQuestions(phase: number): Promise<QuizQuestion[]> {\r\n    try {\r\n      const startQnum = (phase - 1) * 5 + 1;\r\n      const endQnum = phase * 5;\r\n      \r\n      const { data, error } = await supabase\r\n        .from('quizzes')\r\n        .select('*')\r\n        .gte('qnum', startQnum)\r\n        .lte('qnum', endQnum)\r\n        .order('qnum', { ascending: true });\r\n\r\n      if (error) {\r\n        console.error('페이즈 퀴즈 문제 가져오기 실패:', error);\r\n        return [];\r\n      }\r\n\r\n      return data || [];\r\n    } catch (error) {\r\n      console.error('페이즈 퀴즈 문제 가져오기 중 오류:', error);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  // 모든 퀴즈 문제 가져오기\r\n  static async getAllQuestions(): Promise<QuizQuestion[]> {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from('quizzes')\r\n        .select('*')\r\n        .order('qnum', { ascending: true });\r\n\r\n      if (error) {\r\n        console.error('모든 퀴즈 문제 가져오기 실패:', error);\r\n        return [];\r\n      }\r\n\r\n      return data || [];\r\n    } catch (error) {\r\n      console.error('모든 퀴즈 문제 가져오기 중 오류:', error);\r\n      return [];\r\n    }\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;;AAeO,MAAM;IACX,2BAA2B;IAC3B,aAAa,gBAAgB,KAAa,EAAE,KAAa,EAAgC;QACvF,IAAI;YACF,wDAAwD;YACxD,MAAM,OAAO,CAAC,QAAQ,CAAC,IAAI,IAAI;YAE/B,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,uKAAQ,CACnC,IAAI,CAAC,WACL,MAAM,CAAC,KACP,EAAE,CAAC,QAAQ,MACX,MAAM;YAET,IAAI,OAAO;gBACT,QAAQ,KAAK,CAAC,kBAAkB;gBAChC,OAAO;YACT;YAEA,OAAO;QACT,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,oBAAoB;YAClC,OAAO;QACT;IACF;IAEA,0BAA0B;IAC1B,aAAa,kBAAkB,KAAa,EAA2B;QACrE,IAAI;YACF,MAAM,YAAY,CAAC,QAAQ,CAAC,IAAI,IAAI;YACpC,MAAM,UAAU,QAAQ;YAExB,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,uKAAQ,CACnC,IAAI,CAAC,WACL,MAAM,CAAC,KACP,GAAG,CAAC,QAAQ,WACZ,GAAG,CAAC,QAAQ,SACZ,KAAK,CAAC,QAAQ;gBAAE,WAAW;YAAK;YAEnC,IAAI,OAAO;gBACT,QAAQ,KAAK,CAAC,sBAAsB;gBACpC,OAAO,EAAE;YACX;YAEA,OAAO,QAAQ,EAAE;QACnB,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,wBAAwB;YACtC,OAAO,EAAE;QACX;IACF;IAEA,gBAAgB;IAChB,aAAa,kBAA2C;QACtD,IAAI;YACF,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,uKAAQ,CACnC,IAAI,CAAC,WACL,MAAM,CAAC,KACP,KAAK,CAAC,QAAQ;gBAAE,WAAW;YAAK;YAEnC,IAAI,OAAO;gBACT,QAAQ,KAAK,CAAC,qBAAqB;gBACnC,OAAO,EAAE;YACX;YAEA,OAAO,QAAQ,EAAE;QACnB,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,uBAAuB;YACrC,OAAO,EAAE;QACX;IACF;AACF","debugId":null}},
    {"offset": {"line": 784, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/dhwan/Desktop/work/health-hero/src/app/game/quiz/page.tsx"],"sourcesContent":["'use client'\r\n\r\nimport Image from \"next/image\";\r\nimport { useRouter, useSearchParams } from \"next/navigation\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useAuthStore } from \"@/store/authStore\";\r\nimport { useGameStore } from \"@/store/gameStore\";\r\nimport GameHeader from \"@/components/GameHeader\";\r\nimport { QuizService, QuizQuestion } from \"@/services/quizService\";\r\nimport QuizChoiceButton from \"@/components/QuizChoiceButton\";\r\n\r\nexport default function QuizPage() {\r\n  const router = useRouter();\r\n  const searchParams = useSearchParams();\r\n  const { user, isAuthenticated, initialize } = useAuthStore();\r\n  const { \r\n    level, \r\n    totalScore, \r\n    currentPhase,\r\n    currentStage,\r\n    hearts, \r\n    heartTimer, \r\n    isLoading, \r\n    error,\r\n    loadUserData,\r\n    updateHearts \r\n  } = useGameStore();\r\n\r\n  // URL 파라미터에서 현재 퀴즈 정보 가져오기\r\n  const quizPhase = parseInt(searchParams.get('phase') || '1');\r\n  const quizStage = parseInt(searchParams.get('stage') || '1');\r\n\r\n  // 퀴즈 데이터 상태\r\n  const [currentQuestion, setCurrentQuestion] = useState<QuizQuestion | null>(null);\r\n  const [quizLoading, setQuizLoading] = useState(true);\r\n  const [quizError, setQuizError] = useState<string | null>(null);\r\n  const [selectedAnswer, setSelectedAnswer] = useState<number | null>(null);\r\n\r\n  // 텍스트 길이에 따른 동적 폰트 크기 계산\r\n  const getDynamicFontSize = (text: string, maxWidth: number = 245): string => {\r\n    const textLength = text.length;\r\n    \r\n    // 텍스트 길이에 따른 폰트 크기 결정\r\n    if (textLength <= 20) {\r\n      return 'text-2xl'; // 24px\r\n    } else if (textLength <= 30) {\r\n      return 'text-xl'; // 20px\r\n    } else if (textLength <= 40) {\r\n      return 'text-lg'; // 18px\r\n    } else if (textLength <= 50) {\r\n      return 'text-base'; // 16px\r\n    } else if (textLength <= 60) {\r\n      return 'text-sm'; // 14px\r\n    } else {\r\n      return 'text-xs'; // 12px\r\n    }\r\n  };\r\n\r\n  // 선택지 클릭 핸들러\r\n  const handleChoiceClick = (choiceIndex: number) => {\r\n    setSelectedAnswer(choiceIndex);\r\n    // TODO: 답안 제출 로직 구현\r\n    console.log('선택된 답안:', choiceIndex);\r\n  };\r\n\r\n  // 퀴즈 데이터 로드\r\n  useEffect(() => {\r\n    const loadQuizData = async () => {\r\n      if (!isAuthenticated) return;\r\n      \r\n      setQuizLoading(true);\r\n      setQuizError(null);\r\n      \r\n      try {\r\n        const question = await QuizService.getQuizQuestion(quizPhase, quizStage);\r\n        if (question) {\r\n          setCurrentQuestion(question);\r\n        } else {\r\n          setQuizError('퀴즈 문제를 찾을 수 없습니다.');\r\n        }\r\n      } catch (error) {\r\n        console.error('퀴즈 데이터 로드 실패:', error);\r\n        setQuizError('퀴즈 데이터를 불러오는데 실패했습니다.');\r\n      } finally {\r\n        setQuizLoading(false);\r\n      }\r\n    };\r\n\r\n    loadQuizData();\r\n  }, [isAuthenticated, quizPhase, quizStage]);\r\n  useEffect(() => {\r\n    const initData = async () => {\r\n      await initialize();\r\n      if (user?.id) {\r\n        await loadUserData(user.id);\r\n      }\r\n    };\r\n    initData();\r\n  }, [initialize, user?.id, loadUserData]);\r\n\r\n  // 하트 타이머 업데이트 (30초마다)\r\n  useEffect(() => {\r\n    if (!isAuthenticated || !user?.id) return;\r\n\r\n    const interval = setInterval(() => {\r\n      if (hearts && hearts.current_hearts < 5) {\r\n        updateHearts(user.id);\r\n      }\r\n    }, 30000); // 30초마다 실행\r\n\r\n    return () => clearInterval(interval);\r\n  }, [isAuthenticated, user?.id, hearts, updateHearts]);\r\n\r\n\r\n  // 로딩 중\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"relative min-h-screen overflow-hidden\">\r\n        {/* 배경 이미지 */}\r\n        <div className=\"absolute inset-0 z-0\">\r\n          <Image\r\n            src=\"/images/backgrounds/background-quiz.png\"\r\n            alt=\"퀴즈 배경\"\r\n            fill\r\n            className=\"object-cover\"\r\n            priority\r\n          />\r\n        </div>\r\n        \r\n        {/* 로딩 텍스트 */}\r\n        <div className=\"relative z-10 flex items-center justify-center min-h-screen\">\r\n          <div className=\"text-white text-xl font-medium\">로딩 중...</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // 에러 상태\r\n  if (error) {\r\n    return (\r\n      <div className=\"relative min-h-screen overflow-hidden\">\r\n        {/* 배경 이미지 */}\r\n        <div className=\"absolute inset-0 z-0\">\r\n          <Image\r\n            src=\"/images/backgrounds/background-quiz.png\"\r\n            alt=\"퀴즈 배경\"\r\n            fill\r\n            className=\"object-cover\"\r\n            priority\r\n          />\r\n        </div>\r\n        \r\n        {/* 에러 텍스트 */}\r\n        <div className=\"relative z-10 flex items-center justify-center min-h-screen\">\r\n          <div className=\"text-red-500 text-xl font-medium\">에러: {error}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // 인증되지 않은 경우\r\n  if (!isAuthenticated) {\r\n    router.push('/');\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"relative min-h-screen overflow-hidden\">\r\n      {/* 배경 이미지 */}\r\n      <div className=\"absolute inset-0 z-0\">\r\n        <Image\r\n          src=\"/images/backgrounds/background-quiz.png\"\r\n          alt=\"퀴즈 배경\"\r\n          fill\r\n          className=\"object-cover\"\r\n          priority\r\n        />\r\n      </div>\r\n\r\n      {/* 상단 헤더 */}\r\n      <GameHeader />\r\n\r\n      {/* 스테이지 진행 프로그래스바 */}\r\n      <div className=\"fixed top-[84px] left-0 right-0 z-10 flex justify-center\">\r\n        <div className=\"relative\">\r\n          {/* 프로그래스바 테두리 */}\r\n          <Image\r\n            src=\"/images/ui/progressbar01.png\"\r\n            alt=\"프로그래스바 테두리\"\r\n            width={310}\r\n            height={24}\r\n            className=\"object-cover\"\r\n          />\r\n          \r\n          {/* 프로그래스바 내부 */}\r\n          <div className=\"absolute top-1 left-1\">\r\n            <Image\r\n              src=\"/images/ui/progressbar02.png\"\r\n              alt=\"프로그래스바 내부\"\r\n              width={300}\r\n              height={16}\r\n              className=\"object-cover\"\r\n            />\r\n            \r\n            {/* 진행률 표시 (현재 스테이지에 따라) */}\r\n            <div \r\n              className=\"absolute top-0 left-0 h-4 rounded-lg\"\r\n              style={{\r\n                width: `${(quizStage / 5) * 300}px`,\r\n                background: 'linear-gradient(to bottom, #9DF544, #63D42A)',\r\n                border: '1px solid rgba(47, 153, 21, 0.8)',\r\n                boxShadow: 'inset -2px 0px 2px 0px #65D925, inset 2px 0px 2px 0px #67D721'\r\n              }}\r\n            />\r\n            \r\n            {/* 스테이지 정보 텍스트 */}\r\n            <div className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\">\r\n              <span className=\"text-white font-bold text-sm\">\r\n                STAGE {quizPhase}-{quizStage}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* 메인 콘텐츠 영역 */}\r\n      <div className=\"relative z-10 pt-[120px] px-4\">\r\n        {/* 퀴즈 로딩 중 */}\r\n        {quizLoading && (\r\n          <div className=\"flex justify-center items-center min-h-[400px]\">\r\n            <div className=\"text-white text-xl font-medium\">퀴즈 로딩 중...</div>\r\n          </div>\r\n        )}\r\n\r\n        {/* 퀴즈 에러 */}\r\n        {quizError && (\r\n          <div className=\"flex justify-center items-center min-h-[400px]\">\r\n            <div className=\"text-red-500 text-xl font-medium\">{quizError}</div>\r\n          </div>\r\n        )}\r\n\r\n        {/* 퀴즈 문제 표시 */}\r\n        {!quizLoading && !quizError && currentQuestion && (\r\n          <div className=\"flex justify-center\">\r\n            {/* 칠판 */}\r\n            <div className=\"relative\">\r\n              <Image\r\n                src=\"/images/items/blackboard.png\"\r\n                alt=\"칠판\"\r\n                width={342}\r\n                height={282}\r\n                className=\"object-cover\"\r\n              />\r\n              \r\n              {/* 문제 및 토픽 텍스트 컨테이너 */}\r\n              <div className=\"absolute inset-0 flex flex-col items-center justify-center p-4\">\r\n                {/* 토픽 텍스트 */}\r\n                <p className={`text-white text-center font-normal leading-relaxed w-[245px] mb-2 ${getDynamicFontSize(`[${currentQuestion.topic}]`)}`}>\r\n                  [{currentQuestion.topic}]\r\n                </p>\r\n                {/* 문제 텍스트 */}\r\n                <p className={`text-white text-center font-normal leading-relaxed w-[245px] ${getDynamicFontSize(currentQuestion.prompt)}`}>\r\n                  {currentQuestion.prompt}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}